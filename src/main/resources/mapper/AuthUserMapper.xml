<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.activitymanage.mapper.AuthUserMapper">
    <resultMap id="BaseResultMap" type="com.example.activitymanage.model.AuthUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.activitymanage.model.AuthUser"
            useGeneratedKeys="true">
    insert into auth_user (username, password, name, 
      email, role)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.example.activitymanage.model.AuthUser">
    update auth_user
    set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        role = #{role,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateByUsername" parameterType="com.example.activitymanage.model.AuthUser">
        update auth_user
        set
        <if test="authUser.password!=null and authUser.password!=''">
            password=#{authUser.password},
        </if>
        <if test="authUser.name!=null and authUser.name!=''">
            name=#{authUser.name},
        </if>
        <if test="authUser.email!=null and authUser.email!=''">
            email=#{authUser.email},
        </if>
        where username=#{authUser.username}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, username, password, name, email, role
    from auth_user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, username, password, name, email, role
    from auth_user
    where username = #{username,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, name, email, role
    from auth_user
  </select>
</mapper>